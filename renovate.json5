{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:best-practices",

    ":semanticCommitType(build)",
    ":semanticCommitTypeAll(build)",

    "group:allNonMajor",
  ],
  username: "aki-bot[bot]",
  gitAuthor: "aki-bot <103840025+aki-bot[bot]@users.noreply.github.com>",
  platform: "github",
  repositories: ["akikanellis/branch-name-validator-test"],
  branchPrefix: "update-dependencies-",
  onboarding: false,
  requireConfig: "required",
  configMigration: false,
  automerge: false,
  customManagers: [
    {
      description: "Update Renovate in GitHub Action workflows",
      customType: "regex",
      fileMatch: ["^\\.github\\/(actions|workflows)\\/.+\\.ya?ml$"],
      matchStrings: [
        "renovate-version\\s*:\\s*(\"|')?(?<currentValue>.+)(\"|')?(\\s+|\\s+.*)",
      ],
      datasourceTemplate: "docker",
      depNameTemplate: "ghcr.io/renovatebot/renovate",
    },
    {
      description: "Update Just in GitHub Action workflows",
      customType: "regex",
      fileMatch: ["^\\.github\\/(actions|workflows)\\/.+\\.ya?ml$"],
      matchStrings: [
        "just-version\\s*:\\s*(\"|')?(?<currentValue>.+)(\"|')?(\\s+|\\s+.*)",
      ],
      datasourceTemplate: "crate",
      depNameTemplate: "just",
      versioningTemplate: "semver-coerced",
    },
    {
      description: "Update semantic-release in GitHub Action workflows",
      customType: "regex",
      fileMatch: ["^\\.github\\/(actions|workflows)\\/.+\\.ya?ml$"],
      matchStrings: [
        "semantic_version\\s*:\\s*(\"|')?(?<currentValue>.+)(\"|')?(\\s+|\\s+.*)",
      ],
      datasourceTemplate: "npm",
      depNameTemplate: "semantic-release",
    },
    {
      description: "Any other file with dependencies",
      customType: "regex",
      fileMatch: [
        "(^|/)justfile$",
        "(^|/).+\\.gradle(\\.kts)?$",
        "(^workflow-templates|\\.github/workflows)/[^/]+\\.ya?ml$",
        "(^|/)action\\.ya?ml$",
        "^ansible/.*vars/[^/]+\\.ya?ml$",
      ],
      matchStrings: [
        '\
.*renovate:\
\\sdatasource=(?<datasource>.*?)\
\\sdepName=(?<depName>.*?)\
(\\sversioning=(?<versioning>.*?))?\
\n.*(version|Version|VERSION)\\s*(:=|=|:)\\s*"?(?<currentValue>.*?)\
(@(?<currentDigest>sha256:[a-f0-9]+))?"?\
(\\s+|\\s+.*)',
      ],
      versioningTemplate: "\
{{#if versioning}}\
{{{versioning}}}\
{{else}}\
semver-coerced\
{{/if}}",
    },
  ],
  packageRules: [
    {
      description: "Group Docker digest updates",
      groupName: "all Docker digest dependencies",
      groupSlug: "all-docker-digest",
      matchDatasources: ["docker"],
      matchUpdateTypes: ["digest"],
    },
    {
      description: "Block automerge for major updates",
      matchUpdateTypes: ["major"],
      automerge: false,
    },
    {
      description: "Disable Renovate digest pinning in GitHub Action workflows",
      matchManagers: ["regex"],
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/renovatebot/renovate"],
      matchFileNames: [".github/actions/**/*.y*ml", ".github/workflows/*.y*ml"],
      matchUpdateTypes: ["pinDigest"],
      enabled: false,
    },
    {
      description: "Disable published action updates. This is handled via semantic-release.",
      matchSourceUrls: [
        "https://github.com/akikanellis/branch-name-validator-test",
      ],
      enabled: false,
    },
    {
      description: "Group MegaLinter updates",
      groupName: "megalinter monorepo",
      matchSourceUrls: ["https://github.com/oxsecurity/megalinter"],
    },
    {
      description: "\
Limit semantic-release versions to 21.x.x. Version 22.x.x is currently not \
compatible with gradle-semantic-release-plugin.",
      matchDatasources: ["npm"],
      matchPackageNames: ["semantic-release"],
      allowedVersions: "<= 21",
    },
    {
      description: "\
Limit conventional-changelog-conventionalcommits versions to 6.x.x. \
Version 7.x.x is currently only compatible with semantic-release >= 22.",
      matchDatasources: ["npm"],
      matchPackageNames: ["conventional-changelog-conventionalcommits"],
      allowedVersions: "<= 6",
    },
  ],
  "docker-compose": {
    fileMatch: ["(^|/)(?:docker-)?compose[^/]*\\.ya?ml\\.j2$"],
  },
}
